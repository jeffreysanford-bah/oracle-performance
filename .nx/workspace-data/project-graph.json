{
  "nodes": {
    "bin": {
      "name": "bin",
      "type": "app",
      "data": {
        "root": "java-api/bin",
        "name": "bin",
        "projectType": "application",
        "tags": [
          "type:nx-spring-boot"
        ],
        "targets": {
          "build": {
            "executor": "@nxrocks/nx-spring-boot:build",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "cache": true,
            "dependsOn": [
              "^install"
            ],
            "outputs": [
              "{workspaceRoot}/java-api/bin/target"
            ],
            "configurations": {}
          },
          "install": {
            "executor": "@nxrocks/nx-spring-boot:install",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "cache": true,
            "dependsOn": [
              "^install"
            ],
            "outputs": [
              "{workspaceRoot}/java-api/bin/target"
            ],
            "configurations": {}
          },
          "test": {
            "executor": "@nxrocks/nx-spring-boot:test",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "outputs": [
              "{workspaceRoot}/java-api/bin/target"
            ],
            "configurations": {}
          },
          "clean": {
            "executor": "@nxrocks/nx-spring-boot:clean",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "format": {
            "executor": "@nxrocks/nx-spring-boot:format",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "apply-format": {
            "executor": "@nxrocks/nx-spring-boot:apply-format",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "check-format": {
            "executor": "@nxrocks/nx-spring-boot:check-format",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "run": {
            "executor": "@nxrocks/nx-spring-boot:run",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "dependsOn": [
              "^install"
            ],
            "configurations": {}
          },
          "serve": {
            "executor": "@nxrocks/nx-spring-boot:serve",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "dependsOn": [
              "^install"
            ],
            "configurations": {}
          },
          "build-image": {
            "executor": "@nxrocks/nx-spring-boot:build-image",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "outputs": [
              "{workspaceRoot}/java-api/bin/target"
            ],
            "configurations": {}
          },
          "build-info": {
            "executor": "@nxrocks/nx-spring-boot:build-info",
            "options": {
              "root": "java-api/bin",
              "runFromParentModule": true
            },
            "configurations": {}
          }
        },
        "implicitDependencies": []
      }
    },
    "frontend-e2e": {
      "name": "frontend-e2e",
      "type": "e2e",
      "data": {
        "root": "frontend-e2e",
        "metadata": {
          "targetGroups": {
            "E2E (CI)": [
              "e2e-ci--src/example.spec.ts",
              "e2e-ci"
            ]
          }
        },
        "targets": {
          "e2e": {
            "options": {
              "cwd": "frontend-e2e",
              "command": "playwright test"
            },
            "metadata": {
              "technologies": [
                "playwright"
              ],
              "description": "Runs Playwright Tests"
            },
            "cache": true,
            "inputs": [
              "default",
              "^default",
              {
                "externalDependencies": [
                  "@playwright/test"
                ]
              }
            ],
            "outputs": [
              "{workspaceRoot}\\dist\\.playwright\\frontend-e2e\\playwright-report",
              "{workspaceRoot}\\dist\\.playwright\\frontend-e2e\\test-output"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          },
          "e2e-ci--src/example.spec.ts": {
            "options": {
              "cwd": "frontend-e2e",
              "command": "playwright test src/example.spec.ts"
            },
            "metadata": {
              "technologies": [
                "playwright"
              ],
              "description": "Runs Playwright Tests in src/example.spec.ts in CI"
            },
            "cache": true,
            "inputs": [
              "default",
              "^default",
              {
                "externalDependencies": [
                  "@playwright/test"
                ]
              }
            ],
            "outputs": [
              "{workspaceRoot}\\dist\\.playwright\\frontend-e2e\\playwright-report",
              "{workspaceRoot}\\dist\\.playwright\\frontend-e2e\\test-output"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          },
          "e2e-ci": {
            "executor": "nx:noop",
            "cache": true,
            "inputs": [
              "default",
              "^default",
              {
                "externalDependencies": [
                  "@playwright/test"
                ]
              }
            ],
            "outputs": [
              "{workspaceRoot}\\dist\\.playwright\\frontend-e2e\\playwright-report",
              "{workspaceRoot}\\dist\\.playwright\\frontend-e2e\\test-output"
            ],
            "dependsOn": [
              {
                "target": "e2e-ci--src/example.spec.ts",
                "projects": "self",
                "params": "forward"
              }
            ],
            "metadata": {
              "technologies": [
                "playwright"
              ],
              "description": "Runs Playwright Tests in CI"
            },
            "options": {},
            "configurations": {}
          },
          "lint": {
            "cache": true,
            "options": {
              "cwd": "frontend-e2e",
              "command": "eslint ."
            },
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/.eslintrc.json",
              "{projectRoot}/.eslintrc.json",
              "{workspaceRoot}/tools/eslint-rules/**/*",
              {
                "externalDependencies": [
                  "eslint"
                ]
              }
            ],
            "outputs": [
              "{options.outputFile}"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          }
        },
        "name": "frontend-e2e",
        "$schema": "../node_modules/nx/schemas/project-schema.json",
        "projectType": "application",
        "sourceRoot": "frontend-e2e/src",
        "implicitDependencies": [
          "frontend"
        ],
        "tags": []
      }
    },
    "backend-e2e": {
      "name": "backend-e2e",
      "type": "e2e",
      "data": {
        "root": "backend-e2e",
        "targets": {
          "lint": {
            "cache": true,
            "options": {
              "cwd": "backend-e2e",
              "command": "eslint ."
            },
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/.eslintrc.json",
              "{projectRoot}/.eslintrc.json",
              "{workspaceRoot}/tools/eslint-rules/**/*",
              {
                "externalDependencies": [
                  "eslint"
                ]
              }
            ],
            "outputs": [
              "{options.outputFile}"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          },
          "e2e": {
            "executor": "@nx/jest:jest",
            "cache": true,
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/jest.preset.js"
            ],
            "outputs": [
              "{workspaceRoot}/coverage/{e2eProjectRoot}"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "backend-e2e/jest.config.ts"
            },
            "dependsOn": [
              "backend:build"
            ],
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          }
        },
        "name": "backend-e2e",
        "$schema": "../node_modules/nx/schemas/project-schema.json",
        "projectType": "application",
        "implicitDependencies": [
          "backend"
        ],
        "tags": []
      }
    },
    "frontend": {
      "name": "frontend",
      "type": "app",
      "data": {
        "root": "frontend",
        "targets": {
          "lint": {
            "executor": "@nx/eslint:lint",
            "cache": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/eslint.config.js"
            ],
            "options": {},
            "configurations": {}
          },
          "build": {
            "executor": "@angular-devkit/build-angular:browser",
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "default",
              "^default"
            ],
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/frontend",
              "index": "frontend/src/index.html",
              "main": "frontend/src/main.ts",
              "polyfills": [
                "zone.js"
              ],
              "tsConfig": "frontend/tsconfig.app.json",
              "inlineStyleLanguage": "scss",
              "assets": [
                {
                  "glob": "**/*",
                  "input": "frontend/public"
                }
              ],
              "styles": [
                "frontend/src/styles.scss"
              ],
              "scripts": []
            },
            "configurations": {
              "production": {
                "budgets": [
                  {
                    "type": "initial",
                    "maximumWarning": "500kb",
                    "maximumError": "1mb"
                  },
                  {
                    "type": "anyComponentStyle",
                    "maximumWarning": "2kb",
                    "maximumError": "4kb"
                  }
                ],
                "outputHashing": "all"
              },
              "development": {
                "buildOptimizer": false,
                "optimization": false,
                "vendorChunk": true,
                "extractLicenses": false,
                "sourceMap": true,
                "namedChunks": true
              }
            },
            "defaultConfiguration": "production"
          },
          "test": {
            "executor": "@nx/jest:jest",
            "cache": true,
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/jest.preset.js"
            ],
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "frontend/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          },
          "serve": {
            "executor": "@angular-devkit/build-angular:dev-server",
            "configurations": {
              "production": {
                "buildTarget": "frontend:build:production"
              },
              "development": {
                "buildTarget": "frontend:build:development"
              }
            },
            "defaultConfiguration": "development",
            "options": {}
          },
          "extract-i18n": {
            "executor": "@angular-devkit/build-angular:extract-i18n",
            "options": {
              "buildTarget": "frontend:build"
            },
            "configurations": {}
          }
        },
        "name": "frontend",
        "$schema": "../node_modules/nx/schemas/project-schema.json",
        "projectType": "application",
        "prefix": "app",
        "sourceRoot": "frontend/src",
        "tags": [],
        "implicitDependencies": []
      }
    },
    "java-api": {
      "name": "java-api",
      "type": "app",
      "data": {
        "root": "java-api",
        "name": "java-api",
        "projectType": "application",
        "tags": [
          "type:nx-spring-boot"
        ],
        "targets": {
          "build": {
            "executor": "@nxrocks/nx-spring-boot:build",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "cache": true,
            "dependsOn": [
              "^install"
            ],
            "outputs": [
              "{workspaceRoot}/java-api/target"
            ],
            "configurations": {}
          },
          "install": {
            "executor": "@nxrocks/nx-spring-boot:install",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "cache": true,
            "dependsOn": [
              "^install"
            ],
            "outputs": [
              "{workspaceRoot}/java-api/target"
            ],
            "configurations": {}
          },
          "test": {
            "executor": "@nxrocks/nx-spring-boot:test",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "outputs": [
              "{workspaceRoot}/java-api/target"
            ],
            "configurations": {}
          },
          "clean": {
            "executor": "@nxrocks/nx-spring-boot:clean",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "format": {
            "executor": "@nxrocks/nx-spring-boot:format",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "apply-format": {
            "executor": "@nxrocks/nx-spring-boot:apply-format",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "check-format": {
            "executor": "@nxrocks/nx-spring-boot:check-format",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "configurations": {}
          },
          "run": {
            "executor": "@nxrocks/nx-spring-boot:run",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "dependsOn": [
              "^install"
            ],
            "configurations": {}
          },
          "serve": {
            "executor": "@nxrocks/nx-spring-boot:serve",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "dependsOn": [
              "^install"
            ],
            "configurations": {}
          },
          "build-image": {
            "executor": "@nxrocks/nx-spring-boot:build-image",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "outputs": [
              "{workspaceRoot}/java-api/target"
            ],
            "configurations": {}
          },
          "build-info": {
            "executor": "@nxrocks/nx-spring-boot:build-info",
            "options": {
              "root": "java-api",
              "runFromParentModule": true
            },
            "configurations": {}
          }
        },
        "implicitDependencies": []
      }
    },
    "backend": {
      "name": "backend",
      "type": "app",
      "data": {
        "root": "backend",
        "metadata": {
          "targetGroups": {
            "E2E (CI)": [
              "e2e-ci--e2e/example.spec.ts",
              "e2e-ci"
            ]
          }
        },
        "targets": {
          "e2e": {
            "options": {
              "cwd": "backend",
              "command": "playwright test"
            },
            "metadata": {
              "technologies": [
                "playwright"
              ],
              "description": "Runs Playwright Tests"
            },
            "cache": true,
            "inputs": [
              "default",
              "^default",
              {
                "externalDependencies": [
                  "@playwright/test"
                ]
              }
            ],
            "outputs": [
              "{workspaceRoot}\\dist\\.playwright\\backend\\playwright-report",
              "{workspaceRoot}\\dist\\.playwright\\backend\\test-output"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          },
          "e2e-ci--e2e/example.spec.ts": {
            "options": {
              "cwd": "backend",
              "command": "playwright test e2e/example.spec.ts"
            },
            "metadata": {
              "technologies": [
                "playwright"
              ],
              "description": "Runs Playwright Tests in e2e/example.spec.ts in CI"
            },
            "cache": true,
            "inputs": [
              "default",
              "^default",
              {
                "externalDependencies": [
                  "@playwright/test"
                ]
              }
            ],
            "outputs": [
              "{workspaceRoot}\\dist\\.playwright\\backend\\playwright-report",
              "{workspaceRoot}\\dist\\.playwright\\backend\\test-output"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          },
          "e2e-ci": {
            "executor": "nx:noop",
            "cache": true,
            "inputs": [
              "default",
              "^default",
              {
                "externalDependencies": [
                  "@playwright/test"
                ]
              }
            ],
            "outputs": [
              "{workspaceRoot}\\dist\\.playwright\\backend\\playwright-report",
              "{workspaceRoot}\\dist\\.playwright\\backend\\test-output"
            ],
            "dependsOn": [
              {
                "target": "e2e-ci--e2e/example.spec.ts",
                "projects": "self",
                "params": "forward"
              }
            ],
            "metadata": {
              "technologies": [
                "playwright"
              ],
              "description": "Runs Playwright Tests in CI"
            },
            "options": {},
            "configurations": {}
          },
          "lint": {
            "cache": true,
            "options": {
              "cwd": "backend",
              "command": "eslint ."
            },
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/.eslintrc.json",
              "{projectRoot}/.eslintrc.json",
              "{workspaceRoot}/tools/eslint-rules/**/*",
              {
                "externalDependencies": [
                  "eslint"
                ]
              }
            ],
            "outputs": [
              "{options.outputFile}"
            ],
            "executor": "nx:run-commands",
            "configurations": {}
          },
          "test": {
            "executor": "@nx/jest:jest",
            "cache": true,
            "inputs": [
              "default",
              "^default",
              "{workspaceRoot}/jest.preset.js"
            ],
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "backend/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          },
          "serve": {
            "executor": "@nx/js:node",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "backend:build"
            },
            "configurations": {
              "development": {
                "buildTarget": "backend:build:development"
              },
              "production": {
                "buildTarget": "backend:build:production"
              }
            }
          }
        },
        "name": "backend",
        "$schema": "../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "backend/src",
        "projectType": "application",
        "tags": [],
        "implicitDependencies": []
      }
    }
  },
  "externalNodes": {},
  "dependencies": {
    "bin": [],
    "frontend-e2e": [
      {
        "source": "frontend-e2e",
        "target": "frontend",
        "type": "implicit"
      }
    ],
    "backend-e2e": [
      {
        "source": "backend-e2e",
        "target": "backend",
        "type": "implicit"
      }
    ],
    "frontend": [],
    "java-api": [],
    "backend": []
  },
  "version": "6.0"
}